/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package ch.example.generated.model;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class Customer extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -4136156887523686406L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Customer\",\"namespace\":\"ch.example.generated.model\",\"fields\":[{\"name\":\"first_name\",\"type\":\"string\",\"doc\":\"First Name of Customer\"},{\"name\":\"last_name\",\"type\":\"string\",\"doc\":\"Last Name of Customer\"},{\"name\":\"age\",\"type\":\"int\",\"doc\":\"Age at the time of registration\"},{\"name\":\"height\",\"type\":\"float\",\"doc\":\"Height at the time of registration in cm\"},{\"name\":\"weight\",\"type\":\"float\",\"doc\":\"Weight at the time of registration in kg\"},{\"name\":\"automated_email\",\"type\":\"boolean\",\"doc\":\"Field indicating if the user is enrolled in marketing emails\",\"default\":true},{\"name\":\"address\",\"type\":{\"type\":\"record\",\"name\":\"Address\",\"fields\":[{\"name\":\"addressLine1\",\"type\":\"string\"},{\"name\":\"city\",\"type\":\"string\"},{\"name\":\"state_province\",\"type\":\"string\"},{\"name\":\"country\",\"type\":\"string\",\"default\":\"USA\"},{\"name\":\"zip\",\"type\":\"string\"}]}},{\"name\":\"Languages\",\"type\":{\"type\":\"enum\",\"name\":\"Languages\",\"symbols\":[\"English\",\"Hindi\",\"Marathi\",\"Spanish\"]}},{\"name\":\"orderLineItems\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"OrderLineItem\",\"fields\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"size\",\"type\":{\"type\":\"enum\",\"name\":\"Size\",\"symbols\":[\"SMALL\",\"MEDIUM\",\"LARGE\"]}},{\"name\":\"quantity\",\"type\":\"int\"}]}}},{\"name\":\"dateOfBirth\",\"type\":{\"type\":\"int\",\"logicalType\":\"date\"}},{\"name\":\"joiningDateTime\",\"type\":{\"type\":\"long\",\"logicalType\":\"timestamp-millis\"}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();
  static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.data.TimeConversions.DateConversion());
    MODEL$.addLogicalTypeConversion(new org.apache.avro.data.TimeConversions.TimestampMillisConversion());
  }

  private static final BinaryMessageEncoder<Customer> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Customer> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<Customer> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<Customer> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<Customer> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this Customer to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a Customer from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a Customer instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static Customer fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** First Name of Customer */
  private java.lang.CharSequence first_name;
  /** Last Name of Customer */
  private java.lang.CharSequence last_name;
  /** Age at the time of registration */
  private int age;
  /** Height at the time of registration in cm */
  private float height;
  /** Weight at the time of registration in kg */
  private float weight;
  /** Field indicating if the user is enrolled in marketing emails */
  private boolean automated_email;
  private ch.example.generated.model.Address address;
  private ch.example.generated.model.Languages Languages;
  private java.util.List<ch.example.generated.model.OrderLineItem> orderLineItems;
  private java.time.LocalDate dateOfBirth;
  private java.time.Instant joiningDateTime;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Customer() {}

  /**
   * All-args constructor.
   * @param first_name First Name of Customer
   * @param last_name Last Name of Customer
   * @param age Age at the time of registration
   * @param height Height at the time of registration in cm
   * @param weight Weight at the time of registration in kg
   * @param automated_email Field indicating if the user is enrolled in marketing emails
   * @param address The new value for address
   * @param Languages The new value for Languages
   * @param orderLineItems The new value for orderLineItems
   * @param dateOfBirth The new value for dateOfBirth
   * @param joiningDateTime The new value for joiningDateTime
   */
  public Customer(java.lang.CharSequence first_name, java.lang.CharSequence last_name, java.lang.Integer age, java.lang.Float height, java.lang.Float weight, java.lang.Boolean automated_email, ch.example.generated.model.Address address, ch.example.generated.model.Languages Languages, java.util.List<ch.example.generated.model.OrderLineItem> orderLineItems, java.time.LocalDate dateOfBirth, java.time.Instant joiningDateTime) {
    this.first_name = first_name;
    this.last_name = last_name;
    this.age = age;
    this.height = height;
    this.weight = weight;
    this.automated_email = automated_email;
    this.address = address;
    this.Languages = Languages;
    this.orderLineItems = orderLineItems;
    this.dateOfBirth = dateOfBirth;
    this.joiningDateTime = joiningDateTime.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return first_name;
    case 1: return last_name;
    case 2: return age;
    case 3: return height;
    case 4: return weight;
    case 5: return automated_email;
    case 6: return address;
    case 7: return Languages;
    case 8: return orderLineItems;
    case 9: return dateOfBirth;
    case 10: return joiningDateTime;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  private static final org.apache.avro.Conversion<?>[] conversions =
      new org.apache.avro.Conversion<?>[] {
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      new org.apache.avro.data.TimeConversions.DateConversion(),
      new org.apache.avro.data.TimeConversions.TimestampMillisConversion(),
      null
  };

  @Override
  public org.apache.avro.Conversion<?> getConversion(int field) {
    return conversions[field];
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: first_name = (java.lang.CharSequence)value$; break;
    case 1: last_name = (java.lang.CharSequence)value$; break;
    case 2: age = (java.lang.Integer)value$; break;
    case 3: height = (java.lang.Float)value$; break;
    case 4: weight = (java.lang.Float)value$; break;
    case 5: automated_email = (java.lang.Boolean)value$; break;
    case 6: address = (ch.example.generated.model.Address)value$; break;
    case 7: Languages = (ch.example.generated.model.Languages)value$; break;
    case 8: orderLineItems = (java.util.List<ch.example.generated.model.OrderLineItem>)value$; break;
    case 9: dateOfBirth = (java.time.LocalDate)value$; break;
    case 10: joiningDateTime = (java.time.Instant)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'first_name' field.
   * @return First Name of Customer
   */
  public java.lang.CharSequence getFirstName() {
    return first_name;
  }


  /**
   * Sets the value of the 'first_name' field.
   * First Name of Customer
   * @param value the value to set.
   */
  public void setFirstName(java.lang.CharSequence value) {
    this.first_name = value;
  }

  /**
   * Gets the value of the 'last_name' field.
   * @return Last Name of Customer
   */
  public java.lang.CharSequence getLastName() {
    return last_name;
  }


  /**
   * Sets the value of the 'last_name' field.
   * Last Name of Customer
   * @param value the value to set.
   */
  public void setLastName(java.lang.CharSequence value) {
    this.last_name = value;
  }

  /**
   * Gets the value of the 'age' field.
   * @return Age at the time of registration
   */
  public int getAge() {
    return age;
  }


  /**
   * Sets the value of the 'age' field.
   * Age at the time of registration
   * @param value the value to set.
   */
  public void setAge(int value) {
    this.age = value;
  }

  /**
   * Gets the value of the 'height' field.
   * @return Height at the time of registration in cm
   */
  public float getHeight() {
    return height;
  }


  /**
   * Sets the value of the 'height' field.
   * Height at the time of registration in cm
   * @param value the value to set.
   */
  public void setHeight(float value) {
    this.height = value;
  }

  /**
   * Gets the value of the 'weight' field.
   * @return Weight at the time of registration in kg
   */
  public float getWeight() {
    return weight;
  }


  /**
   * Sets the value of the 'weight' field.
   * Weight at the time of registration in kg
   * @param value the value to set.
   */
  public void setWeight(float value) {
    this.weight = value;
  }

  /**
   * Gets the value of the 'automated_email' field.
   * @return Field indicating if the user is enrolled in marketing emails
   */
  public boolean getAutomatedEmail() {
    return automated_email;
  }


  /**
   * Sets the value of the 'automated_email' field.
   * Field indicating if the user is enrolled in marketing emails
   * @param value the value to set.
   */
  public void setAutomatedEmail(boolean value) {
    this.automated_email = value;
  }

  /**
   * Gets the value of the 'address' field.
   * @return The value of the 'address' field.
   */
  public ch.example.generated.model.Address getAddress() {
    return address;
  }


  /**
   * Sets the value of the 'address' field.
   * @param value the value to set.
   */
  public void setAddress(ch.example.generated.model.Address value) {
    this.address = value;
  }

  /**
   * Gets the value of the 'Languages' field.
   * @return The value of the 'Languages' field.
   */
  public ch.example.generated.model.Languages getLanguages() {
    return Languages;
  }


  /**
   * Sets the value of the 'Languages' field.
   * @param value the value to set.
   */
  public void setLanguages(ch.example.generated.model.Languages value) {
    this.Languages = value;
  }

  /**
   * Gets the value of the 'orderLineItems' field.
   * @return The value of the 'orderLineItems' field.
   */
  public java.util.List<ch.example.generated.model.OrderLineItem> getOrderLineItems() {
    return orderLineItems;
  }


  /**
   * Sets the value of the 'orderLineItems' field.
   * @param value the value to set.
   */
  public void setOrderLineItems(java.util.List<ch.example.generated.model.OrderLineItem> value) {
    this.orderLineItems = value;
  }

  /**
   * Gets the value of the 'dateOfBirth' field.
   * @return The value of the 'dateOfBirth' field.
   */
  public java.time.LocalDate getDateOfBirth() {
    return dateOfBirth;
  }


  /**
   * Sets the value of the 'dateOfBirth' field.
   * @param value the value to set.
   */
  public void setDateOfBirth(java.time.LocalDate value) {
    this.dateOfBirth = value;
  }

  /**
   * Gets the value of the 'joiningDateTime' field.
   * @return The value of the 'joiningDateTime' field.
   */
  public java.time.Instant getJoiningDateTime() {
    return joiningDateTime;
  }


  /**
   * Sets the value of the 'joiningDateTime' field.
   * @param value the value to set.
   */
  public void setJoiningDateTime(java.time.Instant value) {
    this.joiningDateTime = value.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
  }

  /**
   * Creates a new Customer RecordBuilder.
   * @return A new Customer RecordBuilder
   */
  public static ch.example.generated.model.Customer.Builder newBuilder() {
    return new ch.example.generated.model.Customer.Builder();
  }

  /**
   * Creates a new Customer RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Customer RecordBuilder
   */
  public static ch.example.generated.model.Customer.Builder newBuilder(ch.example.generated.model.Customer.Builder other) {
    if (other == null) {
      return new ch.example.generated.model.Customer.Builder();
    } else {
      return new ch.example.generated.model.Customer.Builder(other);
    }
  }

  /**
   * Creates a new Customer RecordBuilder by copying an existing Customer instance.
   * @param other The existing instance to copy.
   * @return A new Customer RecordBuilder
   */
  public static ch.example.generated.model.Customer.Builder newBuilder(ch.example.generated.model.Customer other) {
    if (other == null) {
      return new ch.example.generated.model.Customer.Builder();
    } else {
      return new ch.example.generated.model.Customer.Builder(other);
    }
  }

  /**
   * RecordBuilder for Customer instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Customer>
    implements org.apache.avro.data.RecordBuilder<Customer> {

    /** First Name of Customer */
    private java.lang.CharSequence first_name;
    /** Last Name of Customer */
    private java.lang.CharSequence last_name;
    /** Age at the time of registration */
    private int age;
    /** Height at the time of registration in cm */
    private float height;
    /** Weight at the time of registration in kg */
    private float weight;
    /** Field indicating if the user is enrolled in marketing emails */
    private boolean automated_email;
    private ch.example.generated.model.Address address;
    private ch.example.generated.model.Address.Builder addressBuilder;
    private ch.example.generated.model.Languages Languages;
    private java.util.List<ch.example.generated.model.OrderLineItem> orderLineItems;
    private java.time.LocalDate dateOfBirth;
    private java.time.Instant joiningDateTime;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(ch.example.generated.model.Customer.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.first_name)) {
        this.first_name = data().deepCopy(fields()[0].schema(), other.first_name);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.last_name)) {
        this.last_name = data().deepCopy(fields()[1].schema(), other.last_name);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.age)) {
        this.age = data().deepCopy(fields()[2].schema(), other.age);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.height)) {
        this.height = data().deepCopy(fields()[3].schema(), other.height);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.weight)) {
        this.weight = data().deepCopy(fields()[4].schema(), other.weight);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.automated_email)) {
        this.automated_email = data().deepCopy(fields()[5].schema(), other.automated_email);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.address)) {
        this.address = data().deepCopy(fields()[6].schema(), other.address);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (other.hasAddressBuilder()) {
        this.addressBuilder = ch.example.generated.model.Address.newBuilder(other.getAddressBuilder());
      }
      if (isValidValue(fields()[7], other.Languages)) {
        this.Languages = data().deepCopy(fields()[7].schema(), other.Languages);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.orderLineItems)) {
        this.orderLineItems = data().deepCopy(fields()[8].schema(), other.orderLineItems);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.dateOfBirth)) {
        this.dateOfBirth = data().deepCopy(fields()[9].schema(), other.dateOfBirth);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.joiningDateTime)) {
        this.joiningDateTime = data().deepCopy(fields()[10].schema(), other.joiningDateTime);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
    }

    /**
     * Creates a Builder by copying an existing Customer instance
     * @param other The existing instance to copy.
     */
    private Builder(ch.example.generated.model.Customer other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.first_name)) {
        this.first_name = data().deepCopy(fields()[0].schema(), other.first_name);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.last_name)) {
        this.last_name = data().deepCopy(fields()[1].schema(), other.last_name);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.age)) {
        this.age = data().deepCopy(fields()[2].schema(), other.age);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.height)) {
        this.height = data().deepCopy(fields()[3].schema(), other.height);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.weight)) {
        this.weight = data().deepCopy(fields()[4].schema(), other.weight);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.automated_email)) {
        this.automated_email = data().deepCopy(fields()[5].schema(), other.automated_email);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.address)) {
        this.address = data().deepCopy(fields()[6].schema(), other.address);
        fieldSetFlags()[6] = true;
      }
      this.addressBuilder = null;
      if (isValidValue(fields()[7], other.Languages)) {
        this.Languages = data().deepCopy(fields()[7].schema(), other.Languages);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.orderLineItems)) {
        this.orderLineItems = data().deepCopy(fields()[8].schema(), other.orderLineItems);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.dateOfBirth)) {
        this.dateOfBirth = data().deepCopy(fields()[9].schema(), other.dateOfBirth);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.joiningDateTime)) {
        this.joiningDateTime = data().deepCopy(fields()[10].schema(), other.joiningDateTime);
        fieldSetFlags()[10] = true;
      }
    }

    /**
      * Gets the value of the 'first_name' field.
      * First Name of Customer
      * @return The value.
      */
    public java.lang.CharSequence getFirstName() {
      return first_name;
    }


    /**
      * Sets the value of the 'first_name' field.
      * First Name of Customer
      * @param value The value of 'first_name'.
      * @return This builder.
      */
    public ch.example.generated.model.Customer.Builder setFirstName(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.first_name = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'first_name' field has been set.
      * First Name of Customer
      * @return True if the 'first_name' field has been set, false otherwise.
      */
    public boolean hasFirstName() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'first_name' field.
      * First Name of Customer
      * @return This builder.
      */
    public ch.example.generated.model.Customer.Builder clearFirstName() {
      first_name = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'last_name' field.
      * Last Name of Customer
      * @return The value.
      */
    public java.lang.CharSequence getLastName() {
      return last_name;
    }


    /**
      * Sets the value of the 'last_name' field.
      * Last Name of Customer
      * @param value The value of 'last_name'.
      * @return This builder.
      */
    public ch.example.generated.model.Customer.Builder setLastName(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.last_name = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'last_name' field has been set.
      * Last Name of Customer
      * @return True if the 'last_name' field has been set, false otherwise.
      */
    public boolean hasLastName() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'last_name' field.
      * Last Name of Customer
      * @return This builder.
      */
    public ch.example.generated.model.Customer.Builder clearLastName() {
      last_name = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'age' field.
      * Age at the time of registration
      * @return The value.
      */
    public int getAge() {
      return age;
    }


    /**
      * Sets the value of the 'age' field.
      * Age at the time of registration
      * @param value The value of 'age'.
      * @return This builder.
      */
    public ch.example.generated.model.Customer.Builder setAge(int value) {
      validate(fields()[2], value);
      this.age = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'age' field has been set.
      * Age at the time of registration
      * @return True if the 'age' field has been set, false otherwise.
      */
    public boolean hasAge() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'age' field.
      * Age at the time of registration
      * @return This builder.
      */
    public ch.example.generated.model.Customer.Builder clearAge() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'height' field.
      * Height at the time of registration in cm
      * @return The value.
      */
    public float getHeight() {
      return height;
    }


    /**
      * Sets the value of the 'height' field.
      * Height at the time of registration in cm
      * @param value The value of 'height'.
      * @return This builder.
      */
    public ch.example.generated.model.Customer.Builder setHeight(float value) {
      validate(fields()[3], value);
      this.height = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'height' field has been set.
      * Height at the time of registration in cm
      * @return True if the 'height' field has been set, false otherwise.
      */
    public boolean hasHeight() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'height' field.
      * Height at the time of registration in cm
      * @return This builder.
      */
    public ch.example.generated.model.Customer.Builder clearHeight() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'weight' field.
      * Weight at the time of registration in kg
      * @return The value.
      */
    public float getWeight() {
      return weight;
    }


    /**
      * Sets the value of the 'weight' field.
      * Weight at the time of registration in kg
      * @param value The value of 'weight'.
      * @return This builder.
      */
    public ch.example.generated.model.Customer.Builder setWeight(float value) {
      validate(fields()[4], value);
      this.weight = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'weight' field has been set.
      * Weight at the time of registration in kg
      * @return True if the 'weight' field has been set, false otherwise.
      */
    public boolean hasWeight() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'weight' field.
      * Weight at the time of registration in kg
      * @return This builder.
      */
    public ch.example.generated.model.Customer.Builder clearWeight() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'automated_email' field.
      * Field indicating if the user is enrolled in marketing emails
      * @return The value.
      */
    public boolean getAutomatedEmail() {
      return automated_email;
    }


    /**
      * Sets the value of the 'automated_email' field.
      * Field indicating if the user is enrolled in marketing emails
      * @param value The value of 'automated_email'.
      * @return This builder.
      */
    public ch.example.generated.model.Customer.Builder setAutomatedEmail(boolean value) {
      validate(fields()[5], value);
      this.automated_email = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'automated_email' field has been set.
      * Field indicating if the user is enrolled in marketing emails
      * @return True if the 'automated_email' field has been set, false otherwise.
      */
    public boolean hasAutomatedEmail() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'automated_email' field.
      * Field indicating if the user is enrolled in marketing emails
      * @return This builder.
      */
    public ch.example.generated.model.Customer.Builder clearAutomatedEmail() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'address' field.
      * @return The value.
      */
    public ch.example.generated.model.Address getAddress() {
      return address;
    }


    /**
      * Sets the value of the 'address' field.
      * @param value The value of 'address'.
      * @return This builder.
      */
    public ch.example.generated.model.Customer.Builder setAddress(ch.example.generated.model.Address value) {
      validate(fields()[6], value);
      this.addressBuilder = null;
      this.address = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'address' field has been set.
      * @return True if the 'address' field has been set, false otherwise.
      */
    public boolean hasAddress() {
      return fieldSetFlags()[6];
    }

    /**
     * Gets the Builder instance for the 'address' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public ch.example.generated.model.Address.Builder getAddressBuilder() {
      if (addressBuilder == null) {
        if (hasAddress()) {
          setAddressBuilder(ch.example.generated.model.Address.newBuilder(address));
        } else {
          setAddressBuilder(ch.example.generated.model.Address.newBuilder());
        }
      }
      return addressBuilder;
    }

    /**
     * Sets the Builder instance for the 'address' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public ch.example.generated.model.Customer.Builder setAddressBuilder(ch.example.generated.model.Address.Builder value) {
      clearAddress();
      addressBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'address' field has an active Builder instance
     * @return True if the 'address' field has an active Builder instance
     */
    public boolean hasAddressBuilder() {
      return addressBuilder != null;
    }

    /**
      * Clears the value of the 'address' field.
      * @return This builder.
      */
    public ch.example.generated.model.Customer.Builder clearAddress() {
      address = null;
      addressBuilder = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'Languages' field.
      * @return The value.
      */
    public ch.example.generated.model.Languages getLanguages() {
      return Languages;
    }


    /**
      * Sets the value of the 'Languages' field.
      * @param value The value of 'Languages'.
      * @return This builder.
      */
    public ch.example.generated.model.Customer.Builder setLanguages(ch.example.generated.model.Languages value) {
      validate(fields()[7], value);
      this.Languages = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'Languages' field has been set.
      * @return True if the 'Languages' field has been set, false otherwise.
      */
    public boolean hasLanguages() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'Languages' field.
      * @return This builder.
      */
    public ch.example.generated.model.Customer.Builder clearLanguages() {
      Languages = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'orderLineItems' field.
      * @return The value.
      */
    public java.util.List<ch.example.generated.model.OrderLineItem> getOrderLineItems() {
      return orderLineItems;
    }


    /**
      * Sets the value of the 'orderLineItems' field.
      * @param value The value of 'orderLineItems'.
      * @return This builder.
      */
    public ch.example.generated.model.Customer.Builder setOrderLineItems(java.util.List<ch.example.generated.model.OrderLineItem> value) {
      validate(fields()[8], value);
      this.orderLineItems = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'orderLineItems' field has been set.
      * @return True if the 'orderLineItems' field has been set, false otherwise.
      */
    public boolean hasOrderLineItems() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'orderLineItems' field.
      * @return This builder.
      */
    public ch.example.generated.model.Customer.Builder clearOrderLineItems() {
      orderLineItems = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'dateOfBirth' field.
      * @return The value.
      */
    public java.time.LocalDate getDateOfBirth() {
      return dateOfBirth;
    }


    /**
      * Sets the value of the 'dateOfBirth' field.
      * @param value The value of 'dateOfBirth'.
      * @return This builder.
      */
    public ch.example.generated.model.Customer.Builder setDateOfBirth(java.time.LocalDate value) {
      validate(fields()[9], value);
      this.dateOfBirth = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'dateOfBirth' field has been set.
      * @return True if the 'dateOfBirth' field has been set, false otherwise.
      */
    public boolean hasDateOfBirth() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'dateOfBirth' field.
      * @return This builder.
      */
    public ch.example.generated.model.Customer.Builder clearDateOfBirth() {
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'joiningDateTime' field.
      * @return The value.
      */
    public java.time.Instant getJoiningDateTime() {
      return joiningDateTime;
    }


    /**
      * Sets the value of the 'joiningDateTime' field.
      * @param value The value of 'joiningDateTime'.
      * @return This builder.
      */
    public ch.example.generated.model.Customer.Builder setJoiningDateTime(java.time.Instant value) {
      validate(fields()[10], value);
      this.joiningDateTime = value.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'joiningDateTime' field has been set.
      * @return True if the 'joiningDateTime' field has been set, false otherwise.
      */
    public boolean hasJoiningDateTime() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'joiningDateTime' field.
      * @return This builder.
      */
    public ch.example.generated.model.Customer.Builder clearJoiningDateTime() {
      fieldSetFlags()[10] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Customer build() {
      try {
        Customer record = new Customer();
        record.first_name = fieldSetFlags()[0] ? this.first_name : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.last_name = fieldSetFlags()[1] ? this.last_name : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.age = fieldSetFlags()[2] ? this.age : (java.lang.Integer) defaultValue(fields()[2]);
        record.height = fieldSetFlags()[3] ? this.height : (java.lang.Float) defaultValue(fields()[3]);
        record.weight = fieldSetFlags()[4] ? this.weight : (java.lang.Float) defaultValue(fields()[4]);
        record.automated_email = fieldSetFlags()[5] ? this.automated_email : (java.lang.Boolean) defaultValue(fields()[5]);
        if (addressBuilder != null) {
          try {
            record.address = this.addressBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("address"));
            throw e;
          }
        } else {
          record.address = fieldSetFlags()[6] ? this.address : (ch.example.generated.model.Address) defaultValue(fields()[6]);
        }
        record.Languages = fieldSetFlags()[7] ? this.Languages : (ch.example.generated.model.Languages) defaultValue(fields()[7]);
        record.orderLineItems = fieldSetFlags()[8] ? this.orderLineItems : (java.util.List<ch.example.generated.model.OrderLineItem>) defaultValue(fields()[8]);
        record.dateOfBirth = fieldSetFlags()[9] ? this.dateOfBirth : (java.time.LocalDate) defaultValue(fields()[9]);
        record.joiningDateTime = fieldSetFlags()[10] ? this.joiningDateTime : (java.time.Instant) defaultValue(fields()[10]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Customer>
    WRITER$ = (org.apache.avro.io.DatumWriter<Customer>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Customer>
    READER$ = (org.apache.avro.io.DatumReader<Customer>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










